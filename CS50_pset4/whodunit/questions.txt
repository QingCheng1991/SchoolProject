1.What’s stdint.h?  
header shall declare sets of integer types having specified widths, and shall define corresponding sets of macros. It shall also define macros that specify limits of integer types corresponding to types defined in other standard headers.

2.What’s the point of using uint8_t, uint32_t, int32_t, and uint16_t in a program?
intN_t to denotes a signed integer type with a width of exactly N bits(N repsersent the bit 8,32).
uintN_t to denotes an unsigned integer type with a width of exactly N bits.

3.How many bytes is a BYTE, a DWORD, a LONG, and a WORD, respectively?
A byte should have one byte
Dword should have four bytes
Long shoud have four bytes
A word shoud have two bytes

4.What (in ASCII, decimal, or hexadecimal) must the first two bytes of any BMP file be? Leading bytes used to identify file formats (with high probability) are generally called "magic numbers."
Hex:    0x424d
ASCII:  BM (bitmap!)
This value is stored in "bfType".

5.What’s the difference between bfSize and biSize?
bfSize is the total number of bytes in the file (246 for smiley.bmp).
biSize is the number of bytes in the info header (40 for a bitmap).

6.What does it mean if biHeight is negative?
For uncompressed RGB bitmaps, if biHeight is positive, the bitmap is a bottom-
up DIB with the origin at the lower left corner. If biHeight is negative, the
bitmap is a top-down DIB with the origin at the upper left corner.

7.What field in BITMAPINFOHEADER specifies the BMP’s color depth (i.e., bits per pixel)?
biBitCount.

8.Why might fopen return NULL in lines 24 and 32 of copy.c?
If it can't find the file

9.Why is the third argument to fread always 1 in our code?
Because it specifies how many elements you want to read, and we're always
reading a struct so we only need 1 struct.

10.What value does line 65 of copy.c assign to padding if bi.biWidth is 3?
The padding would be 3, because 3 pixels * 3 bytes per pixel * 3 padding = 12,
which is a multiple of 4.

11.What does fseek do?
It moves to a specific location in a file.

12.What is SEEK_CUR?
An integer constant which, when used as the 'whence' argument to the
fseek or fseeko function, specifies that the offset provided is relative to
the current file position.

